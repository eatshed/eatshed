{"version":3,"sources":["utilities/_helpers.scss","base/_reset.scss","base/_generic.scss","utilities/_variables.scss","utilities/_mixins.scss","base/_typography.scss","elements/_content.scss","elements/_buttons.scss","elements/_figures.scss","elements/_forms.scss","elements/_icons.scss","elements/_tables.scss","origin.css","layout/_header.scss","layout/_footer.scss","layout/_site.scss","styles.scss","media/print.scss","origin.scss","../../../../../node_modules/sass-mq/_mq.scss"],"names":[],"mappings":"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","file":"../origin.css","sourcesContent":["// =============================================================================\n// Helper classes\n// =============================================================================\n\n.u-bold { font-weight: bold!important; }\n.u-semibold { font-weight: 600!important; }\n.u-regular { font-weight: normal!important; }\n.u-light { font-weight: 300!important; }\n.u-italic { font-style: italic!important; }\n.u-caps { text-transform: uppercase!important; }\n.u-left-align { text-align: left!important; }\n.u-center { text-align: center!important; }\n.u-right-align { text-align: right!important; }\n\n// WordPress specifc\nimg.alignright      { float: right; margin: 0 0 1em 1em; }\nimg.alignleft       { float: left; margin: 0 1em 1em 0; }\nimg.aligncenter     { display: block; margin-left: auto; margin-right: auto; }\n.alignright         { float: right; }\n.alignleft          { float: left; }\n.aligncenter        { display: block; margin-left: auto; margin-right: auto; }\n\n// debugging\n@if $debug == true {\n    * {\n        box-shadow: inset 0 0 0 1px red;\n    }\n}\n","// =============================================================================\n// minireset.css v0.0.3 | MIT License | github.com/jgthms/minireset.css\n// =============================================================================\n\nhtml,\nbody,\np,\nol,\nul,\nli,\ndl,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tfont-size: 100%;\n\tfont-weight: normal;\n}\n\nul {\n\tlist-style: none;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n\tmargin: 0;\n}\n\nhtml {\n\tbox-sizing: border-box;\n}\n\n*, *:before, *:after {\n\tbox-sizing: inherit;\n}\n\nimg,\nembed,\niframe,\nobject,\naudio,\nvideo {\n\theight: auto;\n\tmax-width: 100%;\n}\n\niframe {\n\tborder: 0;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\ntd,\nth {\n\tpadding: 0;\n\ttext-align: left;\n}\n","// =============================================================================\n// Generic\n// =============================================================================\n\nbody {\n\tbackground-color: $body-background-color;\n\tcolor: $color-text-base;\n\tfont-family: $font-family-body;\n\tfont-size: fluid-type($body-size);\n\tline-height: $body-line-height;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n\nimg {\n\tmax-width: 100%;\n\tvertical-align: middle;\n}\n\n.gm-style img,\nimg[width],\nimg[height] {\n\tmax-width: none;\n}\n\n","// =============================================================================\n// Variables\n// =============================================================================\n$debug:\tfalse;\n\n$color-black: #000;\n$color-grey-dark: #6a6a6a;\n$color-grey: #ddd;\n$color-grey-light: #efefef;\n$color-white: #fff;\n\n$color-primary: #00A886;\n$color-secondary: #144733;\n$color-tertiary: #E9E084;\n$color-quaternary: #FAB500;\n\n$color-text-base: #333;\n$color-text-dark: #181822;\n$color-text-reversed: #fff;\n$color-text-link: #0087D0;\n$color-text-hover: #003451;\n\n$color-facebook: #3B5998;\n$color-twitter: #1DA1F2;\n$color-instagram: #262626;\n$color-youtube: #cc181e;\n$color-linkedin: #0077B5;\n\n$font-family-body: Georgia, Times, \"Times New Roman\", serif;\n$font-family-display: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n$font-family-monospace: Menlo, \"Bitstream Vera Sans Mono\", \"DejaVu Sans Mono\", Monaco, Consolas, monospace;\n\n$body-background-color: $color-white;\n$body-size: 16px;\n$body-size-multiplier: 0.3vw;\n$body-family: $font-family-body;\n$body-color: $color-text-base;\n$body-line-height: 1.5;\n\n$font-size-small: .9rem;\n$font-size-base: 1rem;\n$font-size-lead: 1.3rem;\n\n$font-size-h1: 2.4rem;\n$font-size-h2: 2rem;\n$font-size-h3: 1.8rem;\n$font-size-h4: 1.6rem;\n$font-size-h5: 1.4rem;\n$font-size-h6: 1.2rem;\n\n$heading-line-height: 1.2;\n\n$font-weight-light: 100;\n$font-weight-normal: 400;\n$font-weight-bold: 700;\n$font-weight-heavy: 900;\n$font-weight-headings: $font-weight-bold;\n\n$radius: 4px;\n$radius-large: 32px;\n\n$z-scale: (\n\tforeground: 1,\n\toverlay: 10,\n\tnavigation: 100,\n\tmodal: 200\n);\n\n$mq-breakpoints: (\n\txsmall: 21em,\n    small: 30em,\n    small-major: 40em,\n    medium: 50em,\n    medium-major: 62.5em,\n    large: 62.5em,\n    xlarge: 80em\n);\n\n// $mq-show-breakpoints: (xsmall, small, small-major, medium, medium-major, large, xlarge);\n","// =============================================================================\n// Mixins\n// =============================================================================\n\n// Responsive type\n// Example usage:\n// font-size: font-scale(display, 6);\n@function fluid-type($size) {\n    @return calc(#{$size} + #{$body-size-multiplier});\n}\n\n\n\n// Visually hides elements without hiding them from screen readers\n// Example usage:\n// @include visually-hidden();\n@mixin visually-hidden() {\n\tborder: 0;\n\tclip: rect(0 0 0 0);\n\theight: 1px;\n\tmargin: -1px;\n\toverflow: hidden;\n\tpadding: 0;\n\tposition: absolute;\n\twidth: 1px;\n}\n\n\n\n// Reset margin, padding and list-style on a list\n// Example usage:\n// @include reset-list();\n @mixin reset-list() {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n\n\n// Z-index helper based on settings in variables.scss\n// Example usage:\n// z-index: z-scale(foreground);\n@function z-scale($key) {\n\t@return map-get($z-scale, $key);\n}\n","// =============================================================================\n// Typography\n// =============================================================================\n\np {\n\tmargin-bottom: 1.4em;\n\tmargin-top: 0;\n}\n\np.lead {\n\tfont-size: fluid-type($font-size-lead);\n}\n\nh1, h2, h3, h4, h5, h6 {\n    font-family: $font-family-display;\n    color: $color-text-base;\n    text-rendering: optimizelegibility;\n\tmargin-bottom: .7em;\n\tmargin-top: 0;\n\tfont-weight: $font-weight-headings;\n\tline-height: $heading-line-height;\n}\n\n* + h1, * + h2, * + h3, * + h4, * + h5, * + h6, * + .h1, * + .h2, * + .h3, * + .h4, * + .h5, * + .h6 {\n\tmargin-top: 1.4em;\n}\n\nh1, .h1 { font-size: fluid-type($font-size-h1); }\nh2, .h2 { font-size: fluid-type($font-size-h2); }\nh3, .h3 { font-size: fluid-type($font-size-h3); }\nh4, .h4 { font-size: fluid-type($font-size-h4); }\nh5, .h5 { font-size: fluid-type($font-size-h5); }\nh6, .h6 { font-size: fluid-type($font-size-h6); }\n\na {\n\tcolor: $color-text-link;\n\ttext-decoration: none;\n}\n\na:focus,\na:hover {\n\tcolor: $color-text-hover;\n\ttext-decoration: underline;\n}\n\nblockquote {\n\tmargin-left: 0;\n\tpadding-left: 1em;\n\tborder-left: 8px solid $color-grey-light;\n}\n\nblockquote p {\n\tmargin-bottom: 0.2em;\n}\n\nblockquote footer {\n\tcolor: $color-text-dark;\n\tfont-size: $font-size-small;\n}\n\nol, ul {\n\tpadding-left: 1.5em;\n}\n\ndt {\n\tmargin-top: 1em;\n\tfont-weight: bold;\n}\n\ndd {\n\tmargin-left: 0;\n}\n","// =============================================================================\n// Content\n// =============================================================================\n\n.content {\n\ta {\n\t\ttext-decoration: none;\n\t}\n\n\tabbr {\n\t\tborder-bottom: 1px dotted;\n\t\tcursor: help;\n\t}\n\n\tcite {\n\t\tfont-style: italic;\n\t}\n\n\thr {\n\t\tbackground: $color-grey-light;\n\t\tborder: none;\n\t\tdisplay: block;\n\t\theight: 1px;\n\t\tmargin-bottom: 1.5em;\n\t\tmargin-top: 1.5em\n\t}\n\n\timg {\n\t\tvertical-align:text-bottom\n\t}\n\n\tsmall {\n\t\tfont-size: $font-size-small;\n\t}\n\n\tstrong {\n\t\tfont-weight: $font-weight-bold;\n\t}\n\n\tsub, sup {\n\t\tfont-size: $font-size-small;\n\t}\n\n\tsub {\n\t\tvertical-align: sub;\n\t}\n\n\tsup {\n\t\tvertical-align: super;\n\t}\n\n\tp:last-child, dl:last-child, ol:last-child, ul:last-child, blockquote:last-child, pre:last-child, table:last-child {\n\t\tmargin-bottom: 0;\n\t}\n\n\tp:empty {\n\t\tdisplay:none\n\t}\n}\n","// =============================================================================\n// Buttons\n// =============================================================================\n\n.btn {\n\tdisplay: inline-block;\n\tborder-radius: $radius;\n\tpadding: 0 3rem;\n\tborder: 1px solid $color-grey;\n\tcolor: $color-grey-dark;\n\theight: 40px;\n\tline-height: 40px;\n\tfont-family: $font-family-display;\n\tfont-weight: $font-weight-bold;\n\tfont-size: $font-size-base;\n\ttext-align: center;\n\tcursor: pointer;\n\ttransition: all 0.1s ease-in-out;\n\n\t&:hover, &:focus {\n\t\tborder-color: darken($color-grey, 10%);\n\t\toutline: 0;\n\t\tcolor: $color-grey-dark;\n\t\ttext-decoration: none;\n\t\tposition: relative;\n\t\ttop: -1px;\n\t\tbox-shadow: 0px 2px 2px 0px rgba(0,0,0,0.10);\n\t}\n}\n\n.btn--primary {\n\tbackground-color: $color-primary;\n\tborder: 1px solid $color-primary;\n\tcolor: $color-text-reversed;\n\n\t&:hover, &:focus {\n\t\tborder-color: $color-primary;\n\t\tcolor: $color-text-reversed;\n\t}\n}\n","// =============================================================================\n// Figure\n// =============================================================================\n\nfigure {\n\tmargin: 0;\n}\n\nfigcaption {\n\tmargin-top: 0;\n}\n\nfigcaption p {\n\tfont-size: fluid-type($font-size-small);\n}\n","// =============================================================================\n// Forms\n// =============================================================================\n\ninput[type=\"email\"],\ninput[type=\"number\"],\ninput[type=\"search\"],\ninput[type=\"text\"],\ninput[type=\"tel\"],\ninput[type=\"url\"],\ninput[type=\"password\"],\ntextarea,\nselect {\n\theight: 38px;\n\tpadding: 6px 10px;\n\tbackground-color: #fff;\n\tborder: 1px solid #D1D1D1;\n\tborder-radius: 4px;\n\tbox-shadow: none;\n\tbox-sizing: border-box;\n}\n\ninput[type=\"email\"],\ninput[type=\"number\"],\ninput[type=\"search\"],\ninput[type=\"text\"],\ninput[type=\"tel\"],\ninput[type=\"url\"],\ninput[type=\"password\"],\ntextarea {\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n}\n\ntextarea {\n\tmin-height: 65px;\n\tpadding-top: 6px;\n\tpadding-bottom: 6px;\n}\n\ninput[type=\"email\"]:focus,\ninput[type=\"number\"]:focus,\ninput[type=\"search\"]:focus,\ninput[type=\"text\"]:focus,\ninput[type=\"tel\"]:focus,\ninput[type=\"url\"]:focus,\ninput[type=\"password\"]:focus,\ntextarea:focus,\nselect:focus {\n\tborder: 1px solid $color-grey-dark;\n\toutline: 0;\n}\n\nlabel {\n\tdisplay: block;\n\tmargin: .5em 0;\n\tfont-weight: 600;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n\tdisplay: inline;\n}\n\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"] {\n\tdisplay: block;\n\tpadding: 1em;\n\tmargin: .5em 0;\n\tbackground: $color-primary;\n\tcolor: #fff;\n\tborder-radius: $radius;\n\ttransition: (all 0.2s linear);\n\tborder: 0;\n}\n\ninput[type=\"submit\"].center,\ninput[type=\"reset\"].center,\ninput[type=\"button\"].center {\n\tmargin: 0 auto;\n}\n\ninput[type=\"submit\"]:hover,\ninput[type=\"reset\"]:hover,\ninput[type=\"button\"]:hover,\ninput[type=\"submit\"]:focus,\ninput[type=\"reset\"]:focus,\ninput[type=\"button\"]:focus {\n\tbackground: $color-grey;\n\ttext-decoration: none;\n\tcolor: #fff;\n}\n\n .required {\n\t color: #BF5D58;\n }\n","// =============================================================================\n// Icons\n// =============================================================================\n\n.icon {\n    display: inline-block;\n    vertical-align: middle;\n    fill: currentColor;\n    width: 20px;\n\theight: 20px;\n}\n\n.icon--small {\n    width: 13px;\n    height: 13px;\n}\n\n.icon--medium {\n    width: 26px;\n    height: 26px;\n}\n\n.icon--large {\n    width: 32px;\n    height: 32px;\n}\n\n.icon--xlarge {\n    width: 40px;\n    height: 40px;\n}\n\n.icon--scale {\n    width: 0.75em;\n    height: 0.75em;\n    vertical-align: middle;\n    position: relative;\n    top: -2px;\n}\n\n.icon--top {\n    vertical-align: top;\n}\n\n.icon--bottom {\n    vertical-align: bottom;\n}\n\n.icon--offset {\n    margin-right: 5px;\n}\n","// =============================================================================\n// Tables\n// =============================================================================\n\ntable {\n\tmargin-bottom: 1em;\n}\n\ntable th,\ntable td {\n\tpadding: 0.5em;\n\tborder-bottom: 1px solid $color-grey-light;\n\ttext-align: left;\n\t-webkit-font-smoothing: antialiased;\n}\n\ntable th {\n\tborder-width: 2px;\n}\n\ntable tr:last-child td {\n\tborder-bottom: none;\n}\n\ntable tr:nth-child(even) {\n\tbackground: $color-grey-light;\n}\n\ntable tbody tr:hover {\n\tbackground: $color-grey;\n}\n",".u-bold {\n  font-weight: bold !important; }\n\n.u-semibold {\n  font-weight: 600 !important; }\n\n.u-regular {\n  font-weight: normal !important; }\n\n.u-light {\n  font-weight: 300 !important; }\n\n.u-italic {\n  font-style: italic !important; }\n\n.u-caps {\n  text-transform: uppercase !important; }\n\n.u-left-align {\n  text-align: left !important; }\n\n.u-center {\n  text-align: center !important; }\n\n.u-right-align {\n  text-align: right !important; }\n\nimg.alignright {\n  float: right;\n  margin: 0 0 1em 1em; }\n\nimg.alignleft {\n  float: left;\n  margin: 0 1em 1em 0; }\n\nimg.aligncenter {\n  display: block;\n  margin-left: auto;\n  margin-right: auto; }\n\n.alignright {\n  float: right; }\n\n.alignleft {\n  float: left; }\n\n.aligncenter {\n  display: block;\n  margin-left: auto;\n  margin-right: auto; }\n\nhtml,\nbody,\np,\nol,\nul,\nli,\ndl,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal; }\n\nul {\n  list-style: none; }\n\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0; }\n\nhtml {\n  box-sizing: border-box; }\n\n*, *:before, *:after {\n  box-sizing: inherit; }\n\nimg,\nembed,\niframe,\nobject,\naudio,\nvideo {\n  height: auto;\n  max-width: 100%; }\n\niframe {\n  border: 0; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0;\n  text-align: left; }\n\nbody {\n  background-color: #fff;\n  color: #333;\n  font-family: Georgia, Times, \"Times New Roman\", serif;\n  font-size: calc(16px + 0.3vw);\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\nimg {\n  max-width: 100%;\n  vertical-align: middle; }\n\n.gm-style img,\nimg[width],\nimg[height] {\n  max-width: none; }\n\np {\n  margin-bottom: 1.4em;\n  margin-top: 0; }\n\np.lead {\n  font-size: calc(1.3rem + 0.3vw); }\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  color: #333;\n  text-rendering: optimizelegibility;\n  margin-bottom: .7em;\n  margin-top: 0;\n  font-weight: 700;\n  line-height: 1.2; }\n\n* + h1, * + h2, * + h3, * + h4, * + h5, * + h6, * + .h1, * + .h2, * + .h3, * + .h4, * + .h5, * + .h6 {\n  margin-top: 1.4em; }\n\nh1, .h1 {\n  font-size: calc(2.4rem + 0.3vw); }\n\nh2, .h2 {\n  font-size: calc(2rem + 0.3vw); }\n\nh3, .h3 {\n  font-size: calc(1.8rem + 0.3vw); }\n\nh4, .h4 {\n  font-size: calc(1.6rem + 0.3vw); }\n\nh5, .h5 {\n  font-size: calc(1.4rem + 0.3vw); }\n\nh6, .h6 {\n  font-size: calc(1.2rem + 0.3vw); }\n\na {\n  color: #0087D0;\n  text-decoration: none; }\n\na:focus,\na:hover {\n  color: #003451;\n  text-decoration: underline; }\n\nblockquote {\n  margin-left: 0;\n  padding-left: 1em;\n  border-left: 8px solid #efefef; }\n\nblockquote p {\n  margin-bottom: 0.2em; }\n\nblockquote footer {\n  color: #181822;\n  font-size: 0.9rem; }\n\nol, ul {\n  padding-left: 1.5em; }\n\ndt {\n  margin-top: 1em;\n  font-weight: bold; }\n\ndd {\n  margin-left: 0; }\n\n.content a {\n  text-decoration: none; }\n\n.content abbr {\n  border-bottom: 1px dotted;\n  cursor: help; }\n\n.content cite {\n  font-style: italic; }\n\n.content hr {\n  background: #efefef;\n  border: none;\n  display: block;\n  height: 1px;\n  margin-bottom: 1.5em;\n  margin-top: 1.5em; }\n\n.content img {\n  vertical-align: text-bottom; }\n\n.content small {\n  font-size: 0.9rem; }\n\n.content strong {\n  font-weight: 700; }\n\n.content sub, .content sup {\n  font-size: 0.9rem; }\n\n.content sub {\n  vertical-align: sub; }\n\n.content sup {\n  vertical-align: super; }\n\n.content p:last-child, .content dl:last-child, .content ol:last-child, .content ul:last-child, .content blockquote:last-child, .content pre:last-child, .content table:last-child {\n  margin-bottom: 0; }\n\n.content p:empty {\n  display: none; }\n\n.btn {\n  display: inline-block;\n  border-radius: 4px;\n  padding: 0 3rem;\n  border: 1px solid #ddd;\n  color: #6a6a6a;\n  height: 40px;\n  line-height: 40px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-weight: 700;\n  font-size: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.1s ease-in-out; }\n  .btn:hover, .btn:focus {\n    border-color: #c4c4c4;\n    outline: 0;\n    color: #6a6a6a;\n    text-decoration: none;\n    position: relative;\n    top: -1px;\n    box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.1); }\n\n.btn--primary {\n  background-color: #00A886;\n  border: 1px solid #00A886;\n  color: #fff; }\n  .btn--primary:hover, .btn--primary:focus {\n    border-color: #00A886;\n    color: #fff; }\n\nfigure {\n  margin: 0; }\n\nfigcaption {\n  margin-top: 0; }\n\nfigcaption p {\n  font-size: calc(0.9rem + 0.3vw); }\n\ninput[type=\"email\"],\ninput[type=\"number\"],\ninput[type=\"search\"],\ninput[type=\"text\"],\ninput[type=\"tel\"],\ninput[type=\"url\"],\ninput[type=\"password\"],\ntextarea,\nselect {\n  height: 38px;\n  padding: 6px 10px;\n  background-color: #fff;\n  border: 1px solid #D1D1D1;\n  border-radius: 4px;\n  box-shadow: none;\n  box-sizing: border-box; }\n\ninput[type=\"email\"],\ninput[type=\"number\"],\ninput[type=\"search\"],\ninput[type=\"text\"],\ninput[type=\"tel\"],\ninput[type=\"url\"],\ninput[type=\"password\"],\ntextarea {\n  -webkit-appearance: none;\n  -moz-appearance: none; }\n\ntextarea {\n  min-height: 65px;\n  padding-top: 6px;\n  padding-bottom: 6px; }\n\ninput[type=\"email\"]:focus,\ninput[type=\"number\"]:focus,\ninput[type=\"search\"]:focus,\ninput[type=\"text\"]:focus,\ninput[type=\"tel\"]:focus,\ninput[type=\"url\"]:focus,\ninput[type=\"password\"]:focus,\ntextarea:focus,\nselect:focus {\n  border: 1px solid #6a6a6a;\n  outline: 0; }\n\nlabel {\n  display: block;\n  margin: .5em 0;\n  font-weight: 600; }\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  display: inline; }\n\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"] {\n  display: block;\n  padding: 1em;\n  margin: .5em 0;\n  background: #00A886;\n  color: #fff;\n  border-radius: 4px;\n  transition: all 0.2s linear;\n  border: 0; }\n\ninput[type=\"submit\"].center,\ninput[type=\"reset\"].center,\ninput[type=\"button\"].center {\n  margin: 0 auto; }\n\ninput[type=\"submit\"]:hover,\ninput[type=\"reset\"]:hover,\ninput[type=\"button\"]:hover,\ninput[type=\"submit\"]:focus,\ninput[type=\"reset\"]:focus,\ninput[type=\"button\"]:focus {\n  background: #ddd;\n  text-decoration: none;\n  color: #fff; }\n\n.required {\n  color: #BF5D58; }\n\n.icon {\n  display: inline-block;\n  vertical-align: middle;\n  fill: currentColor;\n  width: 20px;\n  height: 20px; }\n\n.icon--small {\n  width: 13px;\n  height: 13px; }\n\n.icon--medium {\n  width: 26px;\n  height: 26px; }\n\n.icon--large {\n  width: 32px;\n  height: 32px; }\n\n.icon--xlarge {\n  width: 40px;\n  height: 40px; }\n\n.icon--scale {\n  width: 0.75em;\n  height: 0.75em;\n  vertical-align: middle;\n  position: relative;\n  top: -2px; }\n\n.icon--top {\n  vertical-align: top; }\n\n.icon--bottom {\n  vertical-align: bottom; }\n\n.icon--offset {\n  margin-right: 5px; }\n\ntable {\n  margin-bottom: 1em; }\n\ntable th,\ntable td {\n  padding: 0.5em;\n  border-bottom: 1px solid #efefef;\n  text-align: left;\n  -webkit-font-smoothing: antialiased; }\n\ntable th {\n  border-width: 2px; }\n\ntable tr:last-child td {\n  border-bottom: none; }\n\ntable tr:nth-child(even) {\n  background: #efefef; }\n\ntable tbody tr:hover {\n  background: #ddd; }\n\n[role=banner] {\n  text-align: center; }\n\n[role=contentinfo] {\n  text-align: center; }\n\n.container {\n  margin: 0 auto;\n  padding: 0 1em;\n  max-width: 780px; }\n\n@media print {\n  * {\n    background: #ffffff;\n    color: #000000 !important; }\n  html {\n    font: 100%/1.5 Arial, serif; }\n  /**\n * Hide\n */\n  .header,\n  .footer {\n    display: none; }\n  /**\n * Make full-width\n */\n  .unit {\n    margin: 0 !important;\n    padding: 0 !important;\n    width: 100% !important; } }\n\nheader {\n  border-bottom: 1px solid #ddd;\n  padding: 1em 0; }\n\nheader h1 {\n  margin: 0; }\n\nsection {\n  margin: 4rem 0; }\n\n.subtitle {\n  color: #6a6a6a;\n  text-transform: uppercase;\n  font-size: 1.4rem;\n  font-weight: 400; }\n\n@media (min-width: 50em) {\n  .swatch-container {\n    display: flex;\n    justify-content: space-between; } }\n\n.swatch {\n  min-height: 160px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n  @media (min-width: 50em) {\n    .swatch {\n      width: 22%; } }\n\n.swatch--primary {\n  background: #00A886; }\n\n.swatch--secondary {\n  background: #144733; }\n\n.swatch--tertiary {\n  background: #E9E084; }\n\n.swatch--quaternary {\n  background: #FAB500; }\n\n.swatch__meta {\n  font-family: Menlo, \"Bitstream Vera Sans Mono\", \"DejaVu Sans Mono\", Monaco, Consolas, monospace;\n  color: #fff;\n  text-align: center;\n  font-size: 0.9rem; }\n\n.swatch__hex {\n  display: block; }\n\n.icon {\n  margin: 0 0.4em; }\n  .icon:hover {\n    opacity: 0.8; }\n\n.icon--twitter {\n  color: #1DA1F2; }\n\n.icon--facebook {\n  color: #3B5998; }\n\n.icon--youtube {\n  color: #cc181e; }\n","// =============================================================================\n// Header\n// =============================================================================\n\n[role=banner] {\n\ttext-align: center;\n}\n","// =============================================================================\n// Footer\n// =============================================================================\n\n[role=contentinfo] {\n\ttext-align: center;\n}\n","// =============================================================================\n// Site\n// =============================================================================\n\n.container {\n\tmargin: 0 auto;\n\tpadding: 0 1em;\n\tmax-width: 780px;\n}\n","@import \"utilities/_variables\";\n@import \"utilities/_placeholders\";\n@import \"utilities/_mixins\";\n@import \"utilities/_helpers\";\n@import \"../../../../../node_modules/sass-mq/mq\";\n\n@import \"base/_reset\";\n@import \"base/_generic\";\n@import \"base/_typography\";\n\n@import \"elements/_content\";\n@import \"elements/_buttons\";\n@import \"elements/_figures\";\n@import \"elements/_forms\";\n@import \"elements/_icons\";\n@import \"elements/_tables\";\n\n// @import \"components/_menu\";\n// @import \"components/_breadcrumb\";\n// @import \"components/_pagination\";\n\n@import \"layout/_header\";\n@import \"layout/_footer\";\n@import \"layout/_site\";\n\n@media print { @import \"media/print\"; }\n","// =============================================================================\n// Print styles\n// =============================================================================\n\n* {\n\tbackground: #ffffff;\n\tcolor: #000000!important;\n}\n\nhtml {\n\tfont: 100%/1.5 Arial, serif;\n}\n\n/**\n * Hide\n */\n.header,\n.footer {\n\tdisplay: none;\n}\n\n/**\n * Make full-width\n */\n.unit {\n\tmargin: 0!important;\n\tpadding: 0!important;\n\twidth: 100%!important;\n}\n","// Import origin\n@import \"styles\";\n\n// Style guide\nheader {\n\tborder-bottom: 1px solid $color-grey;\n\tpadding: 1em 0;\n}\n\nheader h1 {\n\tmargin: 0;\n}\n\nsection {\n\tmargin: 4rem 0;\n}\n\n.subtitle {\n\tcolor: $color-grey-dark;\n\ttext-transform: uppercase;\n\tfont-size: $font-size-h5;\n\tfont-weight: 400;\n}\n\n.swatch-container {\n\t@include mq(medium) {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n}\n\n.swatch {\n\tmin-height: 160px;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\t@include mq(medium) {\n\t\twidth: 22%;\n\t}\n}\n\n.swatch--primary \t\t{ background: $color-primary }\n.swatch--secondary \t\t{ background: $color-secondary }\n.swatch--tertiary \t\t{ background: $color-tertiary }\n.swatch--quaternary\t \t{ background: $color-quaternary }\n\n.swatch__meta {\n\tfont-family: $font-family-monospace;\n\tcolor: $color-text-reversed;\n\ttext-align: center;\n\tfont-size: $font-size-small;\n}\n\n.swatch__hex {\n\tdisplay: block;\n}\n\n.icon {\n\tmargin: 0 0.4em;\n\t&:hover {\n\t\topacity: 0.8;\n\t}\n}\n\n.icon--twitter {\n\tcolor: $color-twitter;\n}\n\n.icon--facebook {\n\tcolor: $color-facebook;\n}\n\n.icon--youtube {\n\tcolor: $color-youtube;\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"]}