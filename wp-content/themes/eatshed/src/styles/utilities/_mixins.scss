// =============================================================================
// Mixins
// =============================================================================

// Responsive type
// Example usage:
// font-size: font-scale(display, 6);
@function fluid-type($size) {
    @return calc(#{$size} + #{$body-size-multiplier});
}


@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin responsive-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
    @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
        & {
            font-size: $min-font-size;
            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}



// Visually hides elements without hiding them from screen readers
// Example usage:
// @include visually-hidden();
@mixin visually-hidden() {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}



// Reset margin, padding and list-style on a list
// Example usage:
// @include reset-list();
 @mixin reset-list() {
    list-style: none;
    margin: 0;
    padding: 0;
}



// Z-index helper based on settings in variables.scss
// Example usage:
// z-index: z-scale(foreground);
@function z-scale($key) {
	@return map-get($z-scale, $key);
}
